CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY,
    email varchar(40) NOT NULL,
    login varchar(100) NOT NULL,
    name varchar(100) NOT NULL,
    birthday date NOT NULL,
    CONSTRAINT constr_birthday CHECK (birthday < now())
    );

CREATE TABLE IF NOT EXISTS film (
    id INTEGER PRIMARY KEY,
    name varchar(100) NOT NULL,
    description varchar(200) NOT NULL,
    release_date date NOT NULL,
    duration INTEGER NOT NULL
    CONSTRAINT constr_release CHECK (release_date < now())
    );

CREATE TABLE IF NOT EXISTS category (
     id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
     name varchar(40) NOT NULL

    );

CREATE TABLE IF NOT EXISTS rating (
     id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
     name varchar(40) NOT NULL

    );

CREATE TABLE IF NOT EXISTS user_friends (
    user_id INTEGER REFERENCES users (id) ON DELETE CASCADE,
    friends_id INTEGER REFERENCES users (id) ON DELETE CASCADE,
    PRIMARY KEY(user_id, friends_id)

    );


CREATE TABLE IF NOT EXISTS film_likes (
    user_id INTEGER REFERENCES users (id) ON DELETE CASCADE,
    film_id INTEGER REFERENCES film (id) ON DELETE CASCADE,
    PRIMARY KEY(user_id, film_id)

    );


CREATE TABLE IF NOT EXISTS film_category (
    film_id INTEGER REFERENCES film (id) ON DELETE CASCADE,
    category_id INTEGER REFERENCES category (id) ON DELETE CASCADE,
    PRIMARY KEY(film_id, category_id)
    );

CREATE TABLE IF NOT EXISTS film_rating (
    film_id INTEGER REFERENCES film (id) ON DELETE CASCADE,
    rating_id INTEGER REFERENCES rating (id) ON DELETE CASCADE,
    PRIMARY KEY(film_id, rating_id)
    );